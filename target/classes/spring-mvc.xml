<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-4.1.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-4.1.xsd 
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd">

	<!-- 开启mvc注解 -->
	<mvc:annotation-driven />
	
	<!-- 注解扫描包 -->
	<context:component-scan base-package="com.dale.ms.controller" />

	<!-- Interceptor -->
	<mvc:interceptors>
		<mvc:interceptor>
            <mvc:mapping path="/admin/*"/>
            <!-- 
            <mvc:mapping path="/user/*"/>
              -->
            <bean id="loginInterceptor" class="com.dale.ms.interceptors.LoginInterceptor"/>
        </mvc:interceptor>
	</mvc:interceptors>

	<!-- 通过mvc:resources设置静态资源，这样servlet就会处理这些静态资源，而不通过控制器 -->
	<!-- 设置不过滤内容，比如:css,jquery,img 等资源文件 -->
	<mvc:resources location="/css/" mapping="/css/**" />
	<mvc:resources location="/js/" mapping="/js/**" />
	<mvc:resources location="/font/" mapping="/font/**" />
	<mvc:resources mapping="/plugins/**" location="/plugins/" />
	<mvc:resources location="/img/" mapping="/img/**" />

	<!-- fastjson -->
	<mvc:annotation-driven>
		<mvc:message-converters register-defaults="false">            
			<!-- 避免IE执行AJAX时,返回JSON出现下载文件 -->
			<bean id="fastJsonHttpMessageConverter" class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
				<property name="supportedMediaTypes">
					<list>                        
					<!-- 这里顺序不能反，一定先写text/html,不然ie下出现下载提示 -->
						<value>text/html;charset=UTF-8</value>
						<value>application/json;charset=UTF-8</value>
					</list>
				</property>
			</bean>
			
		</mvc:message-converters>
	</mvc:annotation-driven>

	<!-- 配置JSP视图 -->
	<bean id="adminInternalResourceViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/WEB-INF/" />
		<property name="suffix" value=".jsp" />
		<property name="contentType" value="text/html;charset=UTF-8" />
		<property name="order" value="2" />
	</bean>
	
	<!-- 文件上传解析器-->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding" value="UTF-8"></property>
		<!-- 指定所上传文件的总大小不能超过*KB。注意maxUploadSize属性的限制不是针对单个文件，而是所有文件的容量之和 --> 
		<property name="maxUploadSize" value="10485760000"/>
	</bean>

	<!-- SpringMVC在超出上传文件限制时，会抛出org.springframework.web.multipart.MaxUploadSizeExceededException -->    
   <!-- 该异常是SpringMVC在检查上传的文件信息时抛出来的，而且此时还没有进入到Controller方法中-->
	<bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">    
       <property name="exceptionMappings">    
           <props>      
               <!-- 遇到MaxUploadSizeExceededException异常时，跳转到/error.jsp页面 -->    
               <prop key="org.springframework.web.multipart.MaxUploadSizeExceededException">/error.jsp</prop>    
           </props>    
       </property>    
   	</bean>

</beans>